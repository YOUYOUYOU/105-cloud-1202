server.port=7002
spring.application.name=provider-server

#springboot项目启动之后，先去加载bootstrap.properties,才回去加载application.properties

#config的配置信息
spring.cloud.config.label=master
spring.cloud.config.profile=dev


eureka.client.service-url.defaultZone=http://eureka1:7001/eureka/,http://eureka2:7777/eureka/
spring.cloud.config.discovery.service-id=config-server
spring.cloud.config.discovery.enabled=true




#--------------负载均衡策略-------------------
#ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
##请求连接超时时间
#ribbon.ConnectionTimeout=1500
##请求处理的超时时间
#ribbon.ReadTimeout=1500
##对所有请求都进行重试   # 禁止使用
##ribbon.OkToRetryOnAllOperations=true
##切换实例的重试次数
#ribbon.MaxAutoRetriesNextServer=1
##对当前实例的重试次
#ribbon.MaxAutoRetries=1

#---------------ribbon根据provider名称配置-----------------------
eureka-client.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
#请求连接超时时间
eureka-client.ribbon.ConnectionTimeout=1500
#请求处理的超时时间
eureka-client.ribbon.ReadTimeout=1500
#对所有请求都进行重试
#ribbon.OkToRetryOnAllOperations=true
#切换实例的重试次数
eureka-client.ribbon.MaxAutoRetriesNextServer=3
#对当前实例的重试次
eureka-client.ribbon.MaxAutoRetries=2





#-------------------Hystrix熔断策略-----------------------------
#是否开启断路器功能  默认为true

hystrix.command.default.circuitBreaker.enabled=true
#
##是否给方法执行设置超时，默认为 true。
hystrix.command.default.execution.timeout.enabled=true
#
##15s开启熔断  方法执行超时时间，默认值是 1000，即 1秒
hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=15000



#--------针对provider个性化设置，如果有default 则无效-----------

hystrix.command.eureka-client.circuitBreaker.enabled=true
hystrix.command.eureka-client.execution.timeout.enabled=true
hystrix.command.eureka-client.execution.isolation.thread.timeoutInMilliseconds=3000